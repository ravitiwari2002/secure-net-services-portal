//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace P5.CurrencyConverterService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyConverterService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GenerateRandomPicture", ReplyAction="http://tempuri.org/IService1/GenerateRandomPictureResponse")]
        string GenerateRandomPicture();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GenerateRandomPicture", ReplyAction="http://tempuri.org/IService1/GenerateRandomPictureResponse")]
        System.Threading.Tasks.Task<string> GenerateRandomPictureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NewDeck", ReplyAction="http://tempuri.org/IService1/NewDeckResponse")]
        string NewDeck();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/NewDeck", ReplyAction="http://tempuri.org/IService1/NewDeckResponse")]
        System.Threading.Tasks.Task<string> NewDeckAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrawCard", ReplyAction="http://tempuri.org/IService1/DrawCardResponse")]
        string DrawCard(string deckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrawCard", ReplyAction="http://tempuri.org/IService1/DrawCardResponse")]
        System.Threading.Tasks.Task<string> DrawCardAsync(string deckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShuffleDeck", ReplyAction="http://tempuri.org/IService1/ShuffleDeckResponse")]
        string ShuffleDeck(string deckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ShuffleDeck", ReplyAction="http://tempuri.org/IService1/ShuffleDeckResponse")]
        System.Threading.Tasks.Task<string> ShuffleDeckAsync(string deckID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConvertCurrency", ReplyAction="http://tempuri.org/IService1/ConvertCurrencyResponse")]
        string ConvertCurrency(string from, string to, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConvertCurrency", ReplyAction="http://tempuri.org/IService1/ConvertCurrencyResponse")]
        System.Threading.Tasks.Task<string> ConvertCurrencyAsync(string from, string to, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Content", ReplyAction="http://tempuri.org/IService1/Top10ContentResponse")]
        string Top10Content(string temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Content", ReplyAction="http://tempuri.org/IService1/Top10ContentResponse")]
        System.Threading.Tasks.Task<string> Top10ContentAsync(string temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WordFilter", ReplyAction="http://tempuri.org/IService1/WordFilterResponse")]
        string WordFilter(string temp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WordFilter", ReplyAction="http://tempuri.org/IService1/WordFilterResponse")]
        System.Threading.Tasks.Task<string> WordFilterAsync(string temp);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : P5.CurrencyConverterService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<P5.CurrencyConverterService.IService1>, P5.CurrencyConverterService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GenerateRandomPicture() {
            return base.Channel.GenerateRandomPicture();
        }
        
        public System.Threading.Tasks.Task<string> GenerateRandomPictureAsync() {
            return base.Channel.GenerateRandomPictureAsync();
        }
        
        public string NewDeck() {
            return base.Channel.NewDeck();
        }
        
        public System.Threading.Tasks.Task<string> NewDeckAsync() {
            return base.Channel.NewDeckAsync();
        }
        
        public string DrawCard(string deckID) {
            return base.Channel.DrawCard(deckID);
        }
        
        public System.Threading.Tasks.Task<string> DrawCardAsync(string deckID) {
            return base.Channel.DrawCardAsync(deckID);
        }
        
        public string ShuffleDeck(string deckID) {
            return base.Channel.ShuffleDeck(deckID);
        }
        
        public System.Threading.Tasks.Task<string> ShuffleDeckAsync(string deckID) {
            return base.Channel.ShuffleDeckAsync(deckID);
        }
        
        public string ConvertCurrency(string from, string to, string type) {
            return base.Channel.ConvertCurrency(from, to, type);
        }
        
        public System.Threading.Tasks.Task<string> ConvertCurrencyAsync(string from, string to, string type) {
            return base.Channel.ConvertCurrencyAsync(from, to, type);
        }
        
        public string Top10Content(string temp) {
            return base.Channel.Top10Content(temp);
        }
        
        public System.Threading.Tasks.Task<string> Top10ContentAsync(string temp) {
            return base.Channel.Top10ContentAsync(temp);
        }
        
        public string WordFilter(string temp) {
            return base.Channel.WordFilter(temp);
        }
        
        public System.Threading.Tasks.Task<string> WordFilterAsync(string temp) {
            return base.Channel.WordFilterAsync(temp);
        }
    }
}
